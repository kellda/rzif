(function() {var implementors = {};
implementors["rzif"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"rzif/struct.Error.html\" title=\"struct rzif::Error\">Error</a>",synthetic:true,types:["rzif::other::err::Error"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"rzif/struct.Config.html\" title=\"struct rzif::Config\">Config</a>",synthetic:true,types:["rzif::other::interface::Config"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"rzif/enum.Cause.html\" title=\"enum rzif::Cause\">Cause</a>",synthetic:true,types:["rzif::other::err::Cause"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"rzif/enum.SaveError.html\" title=\"enum rzif::SaveError\">SaveError</a>",synthetic:true,types:["rzif::other::err::SaveError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"rzif/enum.Trace.html\" title=\"enum rzif::Trace\">Trace</a>",synthetic:true,types:["rzif::other::err::Trace"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"rzif/enum.ErrorLevel.html\" title=\"enum rzif::ErrorLevel\">ErrorLevel</a>",synthetic:true,types:["rzif::other::interface::ErrorLevel"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()